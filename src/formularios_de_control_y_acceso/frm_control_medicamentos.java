/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formularios_de_control_y_acceso;

import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import conexion.MyConnection;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
/**
 *
 * @author Edwin Martinez
 */
public class frm_control_medicamentos extends javax.swing.JFrame {
    
    DefaultTableModel medicamento;

    
    public frm_control_medicamentos() {
        initComponents();
        this.medicamento = (DefaultTableModel) tbl_medicamentos.getModel();
        Mostrardatos("");
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
    }
public void Limpiar() {
    
        //Limpia los campos en el control de medicamentos
        nombre_medicfld.setText("");
        cantidad_medicfld.setText("");
        txt_preciocompramedic.setText("");
        txt_precioventamedic.setText("");
        txt_gananciamedic.setText("");
        txt_codigoproveedor.setText("");
    }
public void RefrescarTabla(){
        //Funcion encargada de refrescar la tabla utilizando revalidate
        try {
        medicamento.setColumnCount(0);
        medicamento.setRowCount(0);
        tbl_medicamentos.revalidate();
        }
        
        //Mensaje de error
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, "error "+ex);
        }
   
          }

public static void resta_ganancia(){

        //Declaración de variables y sus respectivos campos
        int preccompra, precioventa, ganancia;
        preccompra= Integer.parseInt(txt_preciocompramedic.getText());
        precioventa=Integer.parseInt(txt_precioventamedic.getText());
        ganancia= precioventa-preccompra;
        txt_gananciamedic.setText(String.valueOf(ganancia));
 
}
public final void Mostrardatos(String valor){
            //Funcion para llenar la tabla de usuarios desde la base de datos
            MyConnection cc=new MyConnection();
            Connection cn=MyConnection.getConnection();
            RefrescarTabla();
            medicamento.addColumn("Código");
            medicamento.addColumn("Nombre");
            medicamento.addColumn("Código del tipo de medicamento");
            medicamento.addColumn("Cantidad");
            medicamento.addColumn("Precio de compra");     
            medicamento.addColumn("Precio de venta");
            medicamento.addColumn("Ganancia");
            medicamento.addColumn("Código del proveedor");
       
            
        
            
            this.tbl_medicamentos.setModel(medicamento);
            String sql;
            
            //Condicional IF para seleccionar registros desde la base de datos
            if (valor.equals(""))
            {
            sql="SELECT * FROM medicamento";
            }
           
            else{
            sql="SELECT * FROM medicamento WHERE cod_medic='"+valor+"'";
            } 
            
            //Arreglo para llenar la tabla de medicamentos
            String []datos=new String [8];
            try{
            Statement st=cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
            datos[0]=rs.getString(1);
            datos[1]=rs.getString(2);
            datos[2]=rs.getString(3);
            datos[3]=rs.getString(4);
            datos[4]=rs.getString(5);
            datos[5]=rs.getString(6);
            datos[6]=rs.getString(7);
            datos[7]=rs.getString(8);
            
            medicamento.addRow(datos);
            }
            tbl_medicamentos.setModel(medicamento);
            }
            
            //Mensaje de error
            catch(SQLException ex){
            Logger.getLogger(frm_control_medicamentos.class.getName()).log(Level.SEVERE,null,ex);
            JOptionPane.showMessageDialog(null, "error "+ex);
            }
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jp_contenedor = new javax.swing.JPanel();
        jp_contenedordatos = new javax.swing.JPanel();
        lbl_nombremedic = new javax.swing.JLabel();
        nombre_medicfld = new javax.swing.JTextField();
        lbl_tipomedic = new javax.swing.JLabel();
        tipo_medicfld = new javax.swing.JComboBox<>();
        lbl_precioventamedic = new javax.swing.JLabel();
        txt_precioventamedic = new javax.swing.JTextField();
        lbl_cantidadmedic = new javax.swing.JLabel();
        cantidad_medicfld = new javax.swing.JTextField();
        btn_modificarmedic = new javax.swing.JButton();
        btn_insertmedic = new javax.swing.JButton();
        btn_eliminarmedic = new javax.swing.JButton();
        lbl_preciocompramedic = new javax.swing.JLabel();
        txt_preciocompramedic = new javax.swing.JTextField();
        lbl_gananciamedic = new javax.swing.JLabel();
        txt_gananciamedic = new javax.swing.JTextField();
        lbl_codigoproveedor = new javax.swing.JLabel();
        txt_codigoproveedor = new javax.swing.JTextField();
        jp_contenedortablamedic = new javax.swing.JPanel();
        lbl_inventariomedic = new javax.swing.JLabel();
        jsc_tblmedicamentos = new javax.swing.JScrollPane();
        tbl_medicamentos = new javax.swing.JTable();
        btn_reportemedic = new javax.swing.JButton();
        jp_encabezado = new javax.swing.JPanel();
        lbl_logo = new javax.swing.JLabel();
        lbl_medicamento = new javax.swing.JLabel();
        jp_desa = new javax.swing.JPanel();
        jp_marcoinferior = new javax.swing.JPanel();
        jp_marcosuperior = new javax.swing.JPanel();
        btn_regresar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jp_contenedor.setBackground(new java.awt.Color(255, 255, 255));

        jp_contenedordatos.setBackground(new java.awt.Color(234, 234, 234));

        lbl_nombremedic.setBackground(new java.awt.Color(255, 255, 255));
        lbl_nombremedic.setFont(new java.awt.Font("Britannic Bold", 0, 18)); // NOI18N
        lbl_nombremedic.setText("Nombre");

        nombre_medicfld.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        nombre_medicfld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombre_medicfldActionPerformed(evt);
            }
        });
        nombre_medicfld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nombre_medicfldkeypre(evt);
            }
        });

        lbl_tipomedic.setFont(new java.awt.Font("Britannic Bold", 0, 18)); // NOI18N
        lbl_tipomedic.setText("Tipo de medicamento");

        tipo_medicfld.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        tipo_medicfld.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona", "Analgésico", "Antiinflamatorio", "Antigripal" }));
        tipo_medicfld.setToolTipText("");
        tipo_medicfld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipo_medicfldActionPerformed(evt);
            }
        });

        lbl_precioventamedic.setFont(new java.awt.Font("Britannic Bold", 0, 18)); // NOI18N
        lbl_precioventamedic.setText("Precio de venta");

        txt_precioventamedic.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        txt_precioventamedic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_precioventamedicActionPerformed(evt);
            }
        });

        lbl_cantidadmedic.setFont(new java.awt.Font("Britannic Bold", 0, 18)); // NOI18N
        lbl_cantidadmedic.setText("Cant.");

        cantidad_medicfld.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        cantidad_medicfld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cantidad_medicfldActionPerformed(evt);
            }
        });

        btn_modificarmedic.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        btn_modificarmedic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/modificar_ico.png"))); // NOI18N
        btn_modificarmedic.setToolTipText("Modificar");
        btn_modificarmedic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_modificarmedicActionPerformed(evt);
            }
        });

        btn_insertmedic.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        btn_insertmedic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/insertar_ico.png"))); // NOI18N
        btn_insertmedic.setToolTipText("Insertar");
        btn_insertmedic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_insertmedicActionPerformed(evt);
            }
        });

        btn_eliminarmedic.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        btn_eliminarmedic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/eliminar_ico.png"))); // NOI18N
        btn_eliminarmedic.setToolTipText("Eliminar");
        btn_eliminarmedic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarmedicActionPerformed(evt);
            }
        });

        lbl_preciocompramedic.setFont(new java.awt.Font("Britannic Bold", 0, 18)); // NOI18N
        lbl_preciocompramedic.setText("Precio de compra");

        txt_preciocompramedic.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        txt_preciocompramedic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_preciocompramedicActionPerformed(evt);
            }
        });

        lbl_gananciamedic.setFont(new java.awt.Font("Britannic Bold", 0, 18)); // NOI18N
        lbl_gananciamedic.setText("Ganancia");

        txt_gananciamedic.setEditable(false);
        txt_gananciamedic.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        txt_gananciamedic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_gananciamedicActionPerformed(evt);
            }
        });

        lbl_codigoproveedor.setFont(new java.awt.Font("Britannic Bold", 0, 18)); // NOI18N
        lbl_codigoproveedor.setText("Código del proveedor");

        txt_codigoproveedor.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        txt_codigoproveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_codigoproveedorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jp_contenedordatosLayout = new javax.swing.GroupLayout(jp_contenedordatos);
        jp_contenedordatos.setLayout(jp_contenedordatosLayout);
        jp_contenedordatosLayout.setHorizontalGroup(
            jp_contenedordatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_contenedordatosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jp_contenedordatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_tipomedic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jp_contenedordatosLayout.createSequentialGroup()
                        .addGroup(jp_contenedordatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jp_contenedordatosLayout.createSequentialGroup()
                                .addComponent(btn_insertmedic, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(btn_modificarmedic, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_eliminarmedic, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(tipo_medicfld, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jp_contenedordatosLayout.createSequentialGroup()
                                .addGroup(jp_contenedordatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jp_contenedordatosLayout.createSequentialGroup()
                                        .addComponent(nombre_medicfld, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE))
                                    .addGroup(jp_contenedordatosLayout.createSequentialGroup()
                                        .addComponent(lbl_nombremedic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(144, 144, 144)))
                                .addGroup(jp_contenedordatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbl_cantidadmedic, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cantidad_medicfld, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap())
                    .addGroup(jp_contenedordatosLayout.createSequentialGroup()
                        .addGroup(jp_contenedordatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jp_contenedordatosLayout.createSequentialGroup()
                                .addComponent(lbl_preciocompramedic)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_preciocompramedic, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jp_contenedordatosLayout.createSequentialGroup()
                                .addComponent(lbl_precioventamedic)
                                .addGap(18, 18, 18)
                                .addComponent(txt_precioventamedic, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jp_contenedordatosLayout.createSequentialGroup()
                                .addComponent(lbl_gananciamedic)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_gananciamedic, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jp_contenedordatosLayout.createSequentialGroup()
                                .addComponent(lbl_codigoproveedor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_codigoproveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jp_contenedordatosLayout.setVerticalGroup(
            jp_contenedordatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_contenedordatosLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jp_contenedordatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_cantidadmedic)
                    .addComponent(lbl_nombremedic))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jp_contenedordatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombre_medicfld, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cantidad_medicfld, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(lbl_tipomedic)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tipo_medicfld, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(jp_contenedordatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_preciocompramedic)
                    .addComponent(txt_preciocompramedic, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jp_contenedordatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_precioventamedic)
                    .addComponent(txt_precioventamedic, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jp_contenedordatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_gananciamedic)
                    .addComponent(txt_gananciamedic, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jp_contenedordatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_codigoproveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_codigoproveedor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addGroup(jp_contenedordatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_modificarmedic, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btn_insertmedic, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btn_eliminarmedic, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        jp_contenedortablamedic.setBackground(new java.awt.Color(237, 237, 237));

        lbl_inventariomedic.setBackground(new java.awt.Color(0, 204, 51));
        lbl_inventariomedic.setFont(new java.awt.Font("Britannic Bold", 1, 18)); // NOI18N
        lbl_inventariomedic.setText("Inventario de medicamentos");

        tbl_medicamentos.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        tbl_medicamentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tbl_medicamentos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_medicamentosSeleccionar(evt);
            }
        });
        jsc_tblmedicamentos.setViewportView(tbl_medicamentos);

        btn_reportemedic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/reporte_ico.png"))); // NOI18N
        btn_reportemedic.setToolTipText("Reporte");
        btn_reportemedic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_reportemedicActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jp_contenedortablamedicLayout = new javax.swing.GroupLayout(jp_contenedortablamedic);
        jp_contenedortablamedic.setLayout(jp_contenedortablamedicLayout);
        jp_contenedortablamedicLayout.setHorizontalGroup(
            jp_contenedortablamedicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_contenedortablamedicLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jp_contenedortablamedicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jsc_tblmedicamentos, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jp_contenedortablamedicLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_reportemedic, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jp_contenedortablamedicLayout.createSequentialGroup()
                .addGap(368, 368, 368)
                .addComponent(lbl_inventariomedic)
                .addGap(0, 345, Short.MAX_VALUE))
        );
        jp_contenedortablamedicLayout.setVerticalGroup(
            jp_contenedortablamedicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_contenedortablamedicLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_inventariomedic, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jsc_tblmedicamentos, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btn_reportemedic)
                .addContainerGap())
        );

        jp_encabezado.setBackground(new java.awt.Color(255, 255, 255));

        lbl_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/logo.png"))); // NOI18N

        lbl_medicamento.setFont(new java.awt.Font("Britannic Bold", 1, 28)); // NOI18N
        lbl_medicamento.setText("CONTROL DE MEDICAMENTOS");

        javax.swing.GroupLayout jp_encabezadoLayout = new javax.swing.GroupLayout(jp_encabezado);
        jp_encabezado.setLayout(jp_encabezadoLayout);
        jp_encabezadoLayout.setHorizontalGroup(
            jp_encabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_encabezadoLayout.createSequentialGroup()
                .addComponent(lbl_logo)
                .addGap(18, 18, 18)
                .addComponent(lbl_medicamento)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jp_encabezadoLayout.setVerticalGroup(
            jp_encabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_encabezadoLayout.createSequentialGroup()
                .addComponent(lbl_logo)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jp_encabezadoLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(lbl_medicamento)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jp_desa.setBackground(new java.awt.Color(0, 152, 108));

        javax.swing.GroupLayout jp_desaLayout = new javax.swing.GroupLayout(jp_desa);
        jp_desa.setLayout(jp_desaLayout);
        jp_desaLayout.setHorizontalGroup(
            jp_desaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jp_desaLayout.setVerticalGroup(
            jp_desaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jp_marcoinferior.setBackground(new java.awt.Color(0, 152, 108));

        javax.swing.GroupLayout jp_marcoinferiorLayout = new javax.swing.GroupLayout(jp_marcoinferior);
        jp_marcoinferior.setLayout(jp_marcoinferiorLayout);
        jp_marcoinferiorLayout.setHorizontalGroup(
            jp_marcoinferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jp_marcoinferiorLayout.setVerticalGroup(
            jp_marcoinferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 33, Short.MAX_VALUE)
        );

        jp_marcosuperior.setBackground(new java.awt.Color(0, 152, 108));

        javax.swing.GroupLayout jp_marcosuperiorLayout = new javax.swing.GroupLayout(jp_marcosuperior);
        jp_marcosuperior.setLayout(jp_marcosuperiorLayout);
        jp_marcosuperiorLayout.setHorizontalGroup(
            jp_marcosuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jp_marcosuperiorLayout.setVerticalGroup(
            jp_marcosuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 38, Short.MAX_VALUE)
        );

        btn_regresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/regresar_ico.png"))); // NOI18N
        btn_regresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_regresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jp_contenedorLayout = new javax.swing.GroupLayout(jp_contenedor);
        jp_contenedor.setLayout(jp_contenedorLayout);
        jp_contenedorLayout.setHorizontalGroup(
            jp_contenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_contenedorLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jp_contenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp_contenedorLayout.createSequentialGroup()
                        .addComponent(jp_encabezado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_regresar))
                    .addGroup(jp_contenedorLayout.createSequentialGroup()
                        .addComponent(jp_contenedordatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                        .addComponent(jp_contenedortablamedic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(42, 42, 42))
            .addGroup(jp_contenedorLayout.createSequentialGroup()
                .addGap(696, 696, 696)
                .addComponent(jp_desa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jp_marcoinferior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jp_marcosuperior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jp_contenedorLayout.setVerticalGroup(
            jp_contenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jp_contenedorLayout.createSequentialGroup()
                .addComponent(jp_marcosuperior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jp_desa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(jp_contenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jp_encabezado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_regresar))
                .addGap(26, 26, 26)
                .addGroup(jp_contenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jp_contenedordatos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jp_contenedortablamedic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(jp_marcoinferior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp_contenedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jp_contenedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nombre_medicfldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombre_medicfldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombre_medicfldActionPerformed

    private void nombre_medicfldkeypre(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombre_medicfldkeypre
        // TODO add your handling code here:
        try {
            //Condicional IF para mostrar datos
            if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
                String B =nombre_medicfld.getText()+"";
                Mostrardatos(B);
            }
        }
        //Mensaje de error
        catch (Exception ex){
            JOptionPane.showMessageDialog(null, "error "+ex);
        }
    }//GEN-LAST:event_nombre_medicfldkeypre

    private void tipo_medicfldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipo_medicfldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tipo_medicfldActionPerformed

    private void txt_precioventamedicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_precioventamedicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_precioventamedicActionPerformed

    private void cantidad_medicfldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cantidad_medicfldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cantidad_medicfldActionPerformed

    private void btn_modificarmedicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_modificarmedicActionPerformed
        // TODO add your handling code here:
        resta_ganancia();
        
        //Declaración de variables y sus respectivos campos
        String id_medic = (String)medicamento.getValueAt(tbl_medicamentos.getSelectedRow(),0);
        String nom_medic = nombre_medicfld.getText();
        String can_medic = cantidad_medicfld.getText();
        int tipo_medic = tipo_medicfld.getSelectedIndex();
        String preccompra = txt_preciocompramedic.getText();
        String precventa = txt_precioventamedic.getText();
        String gan = txt_gananciamedic.getText();
        String codprov = txt_codigoproveedor.getText();
        
        //Declaración de consulta
        PreparedStatement ps;
        
        //Creación de sentencia SQL para actualizar un registro dado un código de medicamento
        String query = "UPDATE medicamento SET nom_medic=?, cod_tipo_medic=?, cant_medic=?, precio_compra=?, precio_venta=?, ganancia_medic=?, cod_prov=? WHERE cod_medic=?";
        try {
            ps = MyConnection.getConnection().prepareStatement(query);

            ps.setString(8, id_medic);
            ps.setString(1, nom_medic);
            ps.setInt(2, tipo_medic);
            ps.setString(3, can_medic);
            ps.setString(4, preccompra);
            ps.setString(5, precventa);
            ps.setString(6, gan);
            ps.setString(7, codprov);

            ps.executeUpdate();
            //Mensaje que valida la actualización del registro
            JOptionPane.showMessageDialog(null, "Medicamento Modificado");
            Limpiar();
            Mostrardatos("");
            
        //Mensaje de error
        } catch (SQLException ex) {
            Logger.getLogger(frm_control_medicamentos.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "error "+ex);
        }
    }//GEN-LAST:event_btn_modificarmedicActionPerformed

    private void btn_insertmedicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_insertmedicActionPerformed
        // TODO add your handling code here:
        resta_ganancia();
        
        //Declaración de variables y sus respectivos campos
        String nom_medic = nombre_medicfld.getText();
        String preccom = txt_preciocompramedic.getText();
        String precven = txt_precioventamedic.getText();
        String can = cantidad_medicfld.getText();
        int tipo_medic = tipo_medicfld.getSelectedIndex();
        String gan = txt_gananciamedic.getText();
        String codprov = txt_codigoproveedor.getText();
        
        //Condicional IF para confirmar que no hayan campos vacíos
        if( nom_medic.isEmpty() || can.isEmpty() || preccom.isEmpty() || precven.isEmpty() || codprov.isEmpty()){

            JOptionPane.showMessageDialog(null, "Por favor, llene todos los campos","error", 2);

        }else{
            
            //Declaración de consulta
            PreparedStatement ps;
            
            //Creación de sentencia SQL para insertar los registros
            String query = "INSERT INTO `medicamento`(`nom_medic`, `cod_tipo_medic`, `cant_medic`, `precio_compra`, `precio_venta`, `ganancia_medic`, `cod_prov`) VALUES (?,?,?,?,?,?,?)";
            try {
                ps = MyConnection.getConnection().prepareStatement(query);

                ps.setString(1, nom_medic);
                ps.setInt(2, tipo_medic);
                ps.setString(3, can);
                ps.setString(4, preccom);
                ps.setString(5, precven);
                ps.setString(6, gan);
                ps.setString(7, codprov);
                
                //Condicional IF para validar la inserción de un medicamento
                if(ps.executeUpdate() > 0)
                {
                    JOptionPane.showMessageDialog(null, "Medicamento Agregado Exitosamente!");
                    Mostrardatos("");
                    Limpiar();
                }
            
            //Mensaje de error
            } catch (SQLException ex) {
                Logger.getLogger(frm_control_medicamentos.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "error "+ex);
            }
        }
    }//GEN-LAST:event_btn_insertmedicActionPerformed

    private void btn_eliminarmedicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarmedicActionPerformed
        // TODO add your handling code here:
        
        //Declaración de variable 
        String id_medic = (String) medicamento.getValueAt(tbl_medicamentos.getSelectedRow(),0);
        
        //Declaración de consulta
        PreparedStatement ps;
        
        //Creación de sentencia SQL para eliminar un registro dado un código de medicamento
        String query = "DELETE FROM medicamento WHERE cod_medic=?";
        try {
            ps = MyConnection.getConnection().prepareStatement(query);

            ps.setString(1, id_medic);
            
            //Condicional IF que valida la eliminación del registro
            if(ps.executeUpdate() > 0)
            {

                JOptionPane.showMessageDialog(null, "Medicamento Eliminado");
                Limpiar();
                Mostrardatos("");
            }
        
        //Mensaje de error
        } catch (SQLException ex) {
            Logger.getLogger(frm_control_medicamentos.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "error "+ex);
        }
    }//GEN-LAST:event_btn_eliminarmedicActionPerformed

    private void tbl_medicamentosSeleccionar(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_medicamentosSeleccionar

        try {
            
            //Declaración de variable y sus respectivos campos
            String id = (String) medicamento.getValueAt(tbl_medicamentos.getSelectedRow(),0);
            String nom = (String) medicamento.getValueAt(tbl_medicamentos.getSelectedRow(),1);

            String can = (String) medicamento.getValueAt(tbl_medicamentos.getSelectedRow(),3);
            String preccom = (String) medicamento.getValueAt(tbl_medicamentos.getSelectedRow(),4);
            String precven = (String) medicamento.getValueAt(tbl_medicamentos.getSelectedRow(),5);
            String gan = (String) medicamento.getValueAt(tbl_medicamentos.getSelectedRow(),6);
            String codprov = (String) medicamento.getValueAt(tbl_medicamentos.getSelectedRow(),7);

            nombre_medicfld.setText(nom);
            cantidad_medicfld.setText(can);
            txt_precioventamedic.setText(precven);
            txt_preciocompramedic.setText(preccom);
            txt_gananciamedic.setText(gan);
            txt_codigoproveedor.setText(codprov);

        }
        //Mensaje de error
        catch (Exception ex){
            JOptionPane.showMessageDialog(null, "error "+ex);
        }
    }//GEN-LAST:event_tbl_medicamentosSeleccionar

    private void btn_reportemedicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_reportemedicActionPerformed
        // TODO add your handling code here:
        
        //Uso de conexión para imprimir un reporte de inventario
        Connection cn;
        cn = MyConnection.getConnection();
        try{
            JasperReport jr = (JasperReport) JRLoader.loadObject(frm_control_medicamentos.class.getResource("/reporte/reporte_medicamentos.jasper"));
            Map parametros = new HashMap<>();
            parametros.put("Titulo", "Reporte de medicamentos");

            JasperPrint jp = JasperFillManager.fillReport(jr, parametros, cn);
            JasperViewer jv = new JasperViewer(jp, false);
            jv.setVisible(true);
        }
        catch (JRException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
        }
    }//GEN-LAST:event_btn_reportemedicActionPerformed

    private void txt_preciocompramedicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_preciocompramedicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_preciocompramedicActionPerformed

    private void txt_gananciamedicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_gananciamedicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_gananciamedicActionPerformed

    private void txt_codigoproveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_codigoproveedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_codigoproveedorActionPerformed

    private void btn_regresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_regresarActionPerformed
        // TODO add your handling code here:
        frm_main form = new frm_main();
        form.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_regresarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_control_medicamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_control_medicamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_control_medicamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_control_medicamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
        //Evento para visualizar el control de medicamentos
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frm_control_medicamentos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_eliminarmedic;
    private javax.swing.JButton btn_insertmedic;
    private javax.swing.JButton btn_modificarmedic;
    private javax.swing.JButton btn_regresar;
    private javax.swing.JButton btn_reportemedic;
    private javax.swing.JTextField cantidad_medicfld;
    private javax.swing.JPanel jp_contenedor;
    private javax.swing.JPanel jp_contenedordatos;
    private javax.swing.JPanel jp_contenedortablamedic;
    private javax.swing.JPanel jp_desa;
    private javax.swing.JPanel jp_encabezado;
    private javax.swing.JPanel jp_marcoinferior;
    private javax.swing.JPanel jp_marcosuperior;
    private javax.swing.JScrollPane jsc_tblmedicamentos;
    private javax.swing.JLabel lbl_cantidadmedic;
    private javax.swing.JLabel lbl_codigoproveedor;
    private javax.swing.JLabel lbl_gananciamedic;
    private javax.swing.JLabel lbl_inventariomedic;
    private javax.swing.JLabel lbl_logo;
    private javax.swing.JLabel lbl_medicamento;
    private javax.swing.JLabel lbl_nombremedic;
    private javax.swing.JLabel lbl_preciocompramedic;
    private javax.swing.JLabel lbl_precioventamedic;
    private javax.swing.JLabel lbl_tipomedic;
    private javax.swing.JTextField nombre_medicfld;
    private javax.swing.JTable tbl_medicamentos;
    private javax.swing.JComboBox<String> tipo_medicfld;
    public static javax.swing.JTextField txt_codigoproveedor;
    public static javax.swing.JTextField txt_gananciamedic;
    public static javax.swing.JTextField txt_preciocompramedic;
    public static javax.swing.JTextField txt_precioventamedic;
    // End of variables declaration//GEN-END:variables
}
